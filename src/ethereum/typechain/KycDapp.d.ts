/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface KycDappInterface extends ethers.utils.Interface {
  functions: {
    "isKycLevel1(address)": FunctionFragment;
    "isKycLevel2(address,address)": FunctionFragment;
    "isKycLevel3(address)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "isKycLevel1", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isKycLevel2",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "isKycLevel3", values: [string]): string;

  decodeFunctionResult(
    functionFragment: "isKycLevel1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isKycLevel2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isKycLevel3",
    data: BytesLike
  ): Result;

  events: {};
}

export class KycDapp extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: KycDappInterface;

  functions: {
    isKycLevel1(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isKycLevel1(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isKycLevel3(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isKycLevel3(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;
  };

  isKycLevel1(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

  "isKycLevel1(address)"(
    _wallet: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isKycLevel2(
    _wallet: string,
    _platform: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isKycLevel2(address,address)"(
    _wallet: string,
    _platform: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isKycLevel3(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

  "isKycLevel3(address)"(
    _wallet: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    isKycLevel1(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

    "isKycLevel1(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isKycLevel3(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

    "isKycLevel3(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    isKycLevel1(_wallet: string, overrides?: CallOverrides): Promise<BigNumber>;

    "isKycLevel1(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isKycLevel3(_wallet: string, overrides?: CallOverrides): Promise<BigNumber>;

    "isKycLevel3(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    isKycLevel1(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isKycLevel1(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isKycLevel3(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isKycLevel3(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
